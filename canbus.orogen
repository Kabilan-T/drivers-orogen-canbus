name "can"

using_library "canbus"
import_types_from "base"
import_types_from "canmessage.hh"
import_types_from "canTypes.hh"

task_context "Task" do
    fd_driven
    needs_configuration

    property("device", "/std/string").
        doc "the device file used to connect to the CAN bus"

    property("checkBusOkCount", "int").
        doc "check after how many calls of the update hook the CAN bus will be checked, if it is still ok"

    output_port("stats", "/can/Statistics").
        doc "some statistics about the CAN bus"

    dynamic_input_port(/\w+/, "/can/Message").
        doc "ports for writing CAN messages on the bus"

    dynamic_output_port(/\w+w/, "/can/Message").
        doc "port for reading CAN messages from the bus"

    method("watch").
        returns("int").
        argument("name", "/std/string", "the name of the device/port").
        argument("id", "int", "the bitset representing the associated CAN IDs").
        argument("mask", "int", "a mask on the 'id' parameter")
end

using_task_library "logger"
deployment "test" do
    do_not_install
    t = task("can_Task", "can::Task")

    add_default_logger

    if !corba_enabled?
        browse t
    end
end

